openapi: 3.1.0
info:
  title: DoorDash Drive API
  version: 2.0.27
  description: |
    The DoorDash Drive API enables partners to create and manage deliveries, quotes, businesses, and stores. For more information, visit the [DoorDash Developer Portal](https://developer.doordash.com/en-US/api/drive/).
servers:
  - url: https://openapi.doordash.com/drive
    description: Production server
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT Token authentication. See the [JWT Token guide](https://developer.doordash.com/en-US/docs/drive/api/token) for more information.
  schemas:
    CreateQuoteRequest:
      type: object
      required:
        - external_delivery_id
        - dropoff_address
        - dropoff_phone_number
      properties:
        external_delivery_id:
          type: string
          description: Unique ID generated by the caller for the delivery.
        locale:
          type: string
          description: The language DoorDash should use when sending updates about this delivery.
        order_fulfillment_method:
          type: string
          enum: [standard, catering, shop_stage, shop_deliver, parcel, large_order, shop_handoff]
        origin_facility_id:
          type: string
        pickup_address:
          type: string
        pickup_business_name:
          type: string
        pickup_phone_number:
          type: string
        pickup_instructions:
          type: string
        pickup_reference_tag:
          type: string
        pickup_external_business_id:
          type: string
        pickup_external_store_id:
          type: string
        pickup_verification_metadata:
          type: object
        dropoff_address:
          type: string
        dropoff_business_name:
          type: string
        dropoff_location:
          type: object
        dropoff_phone_number:
          type: string
        dropoff_instructions:
          type: string
    CreateQuoteResponse:
      type: object
      properties:
        quote_id:
          type: string
        fee:
          type: number
        currency:
          type: string
        is_serviceable:
          type: boolean
        estimated_delivery_time:
          type: string
          format: date-time
        errors:
          type: array
          items:
            type: string
    Error:
      type: object
      properties:
        message:
          type: string
        code:
          type: string
    AcceptQuoteRequest:
      type: object
      required:
        - external_delivery_id
        - quote_id
      properties:
        external_delivery_id:
          type: string
          description: Unique ID generated by the caller for the delivery.
        quote_id:
          type: string
          description: The ID of the quote to accept.
    AcceptQuoteResponse:
      type: object
      properties:
        delivery_id:
          type: string
        status:
          type: string
          description: Status of the accepted quote.
    CreateDeliveryRequest:
      type: object
      required:
        - external_delivery_id
        - dropoff_address
        - dropoff_phone_number
      properties:
        external_delivery_id:
          type: string
        locale:
          type: string
        order_fulfillment_method:
          type: string
          enum: [standard, catering, shop_stage, shop_deliver, parcel, large_order, shop_handoff]
        origin_facility_id:
          type: string
        pickup_address:
          type: string
        pickup_business_name:
          type: string
        pickup_phone_number:
          type: string
        pickup_instructions:
          type: string
        pickup_reference_tag:
          type: string
        pickup_external_business_id:
          type: string
        pickup_external_store_id:
          type: string
        pickup_verification_metadata:
          type: object
        dropoff_address:
          type: string
        dropoff_business_name:
          type: string
        dropoff_location:
          type: object
        dropoff_phone_number:
          type: string
        dropoff_instructions:
          type: string
    CreateDeliveryResponse:
      type: object
      properties:
        delivery_id:
          type: string
        status:
          type: string
          description: Status of the created delivery.
    Delivery:
      type: object
      properties:
        delivery_id:
          type: string
        external_delivery_id:
          type: string
        status:
          type: string
        dropoff_address:
          type: string
        dropoff_phone_number:
          type: string
        created_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
    UpdateDeliveryRequest:
      type: object
      properties:
        dropoff_address:
          type: string
        dropoff_phone_number:
          type: string
        dropoff_business_name:
          type: string
        dropoff_instructions:
          type: string
        dropoff_location:
          type: object
        pickup_address:
          type: string
        pickup_phone_number:
          type: string
        pickup_business_name:
          type: string
        pickup_instructions:
          type: string
        pickup_reference_tag:
          type: string
        pickup_external_business_id:
          type: string
        pickup_external_store_id:
          type: string
        pickup_verification_metadata:
          type: object
        order_fulfillment_method:
          type: string
          enum: [standard, catering, shop_stage, shop_deliver, parcel, large_order, shop_handoff]
        origin_facility_id:
          type: string
        locale:
          type: string
    CancelDeliveryRequest:
      type: object
      properties:
        cancellation_reason:
          type: string
        cancellation_notes:
          type: string
    ItemsSubstitutionRecommendationRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            type: object
            required:
              - item_id
              - name
              - quantity
            properties:
              item_id:
                type: string
              name:
                type: string
              quantity:
                type: integer
    ItemsSubstitutionRecommendationResponse:
      type: object
      properties:
        recommendations:
          type: array
          items:
            type: object
            properties:
              item_id:
                type: string
              substitutions:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    item_id:
                      type: string
    CheckoutAuditSignalRequest:
      type: object
      required:
        - external_delivery_id
        - event_time
        - event_type
        - user_id
        - cart_value
        - currency
      properties:
        external_delivery_id:
          type: string
        event_time:
          type: string
          format: date-time
        event_type:
          type: string
          enum: [checkout_initiated, checkout_completed, checkout_abandoned]
        user_id:
          type: string
        cart_value:
          type: number
        currency:
          type: string
        metadata:
          type: object
    CheckoutAuditSignalResponse:
      type: object
      properties:
        status:
          type: string
    Business:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        external_business_id:
          type: string
        activation_status:
          type: string
        created_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
        is_test:
          type: boolean
        external_metadata:
          type: object
          properties:
            number_of_stores:
              type: string
            client_email:
              type: string
            client_phone_number:
              type: string
            external_store_ids:
              type: array
              items:
                type: string
    UpdateBusinessRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the business.
        description:
          type: string
          description: The description of the business.
    CreateBusinessRequest:
      type: object
      required:
        - external_business_id
        - name
      properties:
        external_business_id:
          type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
        name:
          type: string
          description: The name of the business.
        description:
          type: string
          description: The description of the business.
    ListBusinessesResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Business'
        continuation_token:
          type: string
        result_count:
          type: integer
    Store:
      type: object
      properties:
        name:
          type: string
        external_business_id:
          type: string
        external_store_id:
          type: string
        phone_number:
          type: string
        address:
          type: string
        status:
          type: string
        is_test:
          type: boolean
        created_at:
          type: string
          format: date-time
        last_updated_at:
          type: string
          format: date-time
    UpdateStoreRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the store.
        phone_number:
          type: string
          description: The phone number of the store.
        address:
          type: string
          description: The full address of the store, in the order appropriate for your locale, with each element separated by a comma.
    CreateStoreRequest:
      type: object
      required:
        - external_store_id
        - name
        - address
      properties:
        external_store_id:
          type: string
          description: "A unique ID for the store, selected or generated by the API caller. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
        name:
          type: string
          description: The name of the store.
        phone_number:
          type: string
          description: The phone number of the store.
        address:
          type: string
          description: The full address of the store, in the order appropriate for your locale, with each element separated by a comma.
    ListStoresResponse:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Store'
        continuation_token:
          type: string
        result_count:
          type: integer
paths:
  /v1/quotes:
    post:
      tags:
        - Delivery
      summary: Create Quote
      description: Create a quote to confirm that a delivery is serviceable by DoorDash and what it would cost.
      operationId: createQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuoteRequest'
            examples:
              basic:
                value:
                  external_delivery_id: "abc123"
                  dropoff_address: "123 Main St, San Francisco, CA"
                  dropoff_phone_number: "+14155551234"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuoteResponse'
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/quotes/accept:
    post:
      tags:
        - Delivery
      summary: Accept Quote
      description: Accept a previously created quote to proceed with the delivery.
      operationId: acceptQuote
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptQuoteRequest'
            examples:
              basic:
                value:
                  external_delivery_id: "abc123"
                  quote_id: "quote_456"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptQuoteResponse'
              examples:
                success:
                  value:
                    delivery_id: "delivery_789"
                    status: "accepted"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/deliveries:
    post:
      tags:
        - Delivery
      summary: Create Delivery
      description: Create a new delivery with all required and optional details.
      operationId: createDelivery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeliveryRequest'
            examples:
              basic:
                value:
                  external_delivery_id: "abc123"
                  dropoff_address: "123 Main St, San Francisco, CA"
                  dropoff_phone_number: "+14155551234"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDeliveryResponse'
              examples:
                success:
                  value:
                    delivery_id: "delivery_789"
                    status: "created"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/deliveries/{delivery_id}:
    get:
      tags:
        - Delivery
      summary: Get Delivery
      description: Retrieve the details of a specific delivery.
      operationId: getDelivery
      parameters:
        - in: path
          name: delivery_id
          required: true
          schema:
            type: string
          description: The DoorDash-generated delivery ID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
              examples:
                success:
                  value:
                    delivery_id: "delivery_789"
                    external_delivery_id: "abc123"
                    status: "created"
                    dropoff_address: "123 Main St, San Francisco, CA"
                    dropoff_phone_number: "+14155551234"
                    created_at: "2024-06-04T15:00:00Z"
                    last_updated_at: "2024-06-04T15:10:00Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Delivery
      summary: Update Delivery
      description: Update the details of a specific delivery.
      operationId: updateDelivery
      parameters:
        - in: path
          name: delivery_id
          required: true
          schema:
            type: string
          description: The DoorDash-generated delivery ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeliveryRequest'
            examples:
              basic:
                value:
                  dropoff_address: "456 Market St, San Francisco, CA"
                  dropoff_phone_number: "+14155554321"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
              examples:
                success:
                  value:
                    delivery_id: "delivery_789"
                    external_delivery_id: "abc123"
                    status: "updated"
                    dropoff_address: "456 Market St, San Francisco, CA"
                    dropoff_phone_number: "+14155554321"
                    created_at: "2024-06-04T15:00:00Z"
                    last_updated_at: "2024-06-04T15:20:00Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
        - Delivery
      summary: Cancel Delivery
      description: Cancel a specific delivery.
      operationId: cancelDelivery
      parameters:
        - in: path
          name: delivery_id
          required: true
          schema:
            type: string
          description: The DoorDash-generated delivery ID.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelDeliveryRequest'
            examples:
              basic:
                value:
                  cancellation_reason: "customer_cancelled"
                  cancellation_notes: "Customer called to cancel"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
              examples:
                success:
                  value:
                    delivery_id: "delivery_789"
                    external_delivery_id: "abc123"
                    status: "cancelled"
                    dropoff_address: "123 Main St, San Francisco, CA"
                    dropoff_phone_number: "+14155551234"
                    created_at: "2024-06-04T15:00:00Z"
                    last_updated_at: "2024-06-04T15:30:00Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/deliveries/{delivery_id}/items_substitution_recommendation:
    post:
      tags:
        - Delivery
      summary: Get Items Substitution Recommendation
      description: Get recommended substitutions for items in a delivery.
      operationId: getItemsSubstitutionRecommendation
      parameters:
        - in: path
          name: delivery_id
          required: true
          schema:
            type: string
          description: The DoorDash-generated delivery ID.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemsSubstitutionRecommendationRequest'
            examples:
              basic:
                value:
                  items:
                    - item_id: "item_123"
                      name: "Milk"
                      quantity: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemsSubstitutionRecommendationResponse'
              examples:
                success:
                  value:
                    recommendations:
                      - item_id: "item_123"
                        substitutions:
                          - name: "Almond Milk"
                            item_id: "item_456"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Delivery not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/audit/checkout_signal:
    post:
      tags:
        - Audit
      summary: Create Checkout Audit Signal
      description: Send a checkout audit signal to DoorDash for fraud and risk analysis.
      operationId: createCheckoutAuditSignal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutAuditSignalRequest'
            examples:
              basic:
                value:
                  external_delivery_id: "abc123"
                  event_time: "2024-06-04T15:00:00Z"
                  event_type: "checkout_completed"
                  user_id: "user_456"
                  cart_value: 29.99
                  currency: "USD"
                  metadata:
                    ip_address: "192.168.1.1"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutAuditSignalResponse'
              examples:
                success:
                  value:
                    status: "accepted"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/businesses/{external_business_id}:
    get:
      tags:
        - Business & Store
      summary: Get Business
      description: Get the details of a business.
      operationId: getBusiness
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli"
                    description: "A neighborhood deli serving many tasty sandwiches and soups."
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    activation_status: "active"
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
                    is_test: false
                    external_metadata:
                      number_of_stores: "10"
                      client_email: "client@email.com"
                      client_phone_number: "+12065551212"
                      external_store_ids:
                        - "string"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Business & Store
      summary: Update Business
      description: Update the attributes of a business.
      operationId: updateBusiness
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessRequest'
            examples:
              basic:
                value:
                  name: "Neighborhood Deli"
                  description: "A neighborhood deli serving many tasty sandwiches and soups."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli"
                    description: "A neighborhood deli serving many tasty sandwiches and soups."
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    activation_status: "active"
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
                    is_test: false
                    external_metadata:
                      number_of_stores: "10"
                      client_email: "client@email.com"
                      client_phone_number: "+12065551212"
                      external_store_ids:
                        - "string"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Business not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/businesses:
    post:
      tags:
        - Business & Store
      summary: Create Business
      description: Create a new business.
      operationId: createBusiness
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBusinessRequest'
            examples:
              basic:
                value:
                  external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                  name: "Neighborhood Deli"
                  description: "A neighborhood deli serving many tasty sandwiches and soups."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli"
                    description: "A neighborhood deli serving many tasty sandwiches and soups."
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    activation_status: "active"
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
                    is_test: false
                    external_metadata:
                      number_of_stores: "10"
                      client_email: "client@email.com"
                      client_phone_number: "+12065551212"
                      external_store_ids:
                        - "string"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Business & Store
      summary: List Businesses
      description: List all businesses for the developer.
      operationId: listBusinesses
      parameters:
        - name: continuationToken
          in: query
          required: false
          schema:
            type: string
          description: "Opaque string that can be used to fetch next page of businesses, the token value will be null if there are no more businesses to fetch. Page size is 100 businesses."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBusinessesResponse'
              examples:
                success:
                  value:
                    result:
                      - name: "Neighborhood Deli"
                        description: "A neighborhood deli serving many tasty sandwiches and soups."
                        external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                        activation_status: "active"
                        created_at: "2022-04-25T17:21:43Z"
                        last_updated_at: "2022-04-25T17:21:43Z"
                        is_test: false
                        external_metadata:
                          number_of_stores: "10"
                          client_email: "client@email.com"
                          client_phone_number: "+12065551212"
                          external_store_ids:
                            - "string"
                    continuation_token: "string"
                    result_count: 1
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/businesses/{external_business_id}/stores/{external_store_id}:
    get:
      tags:
        - Business & Store
      summary: Get Store
      description: Get the details of a store.
      operationId: getStore
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
        - name: external_store_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID for the store. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli #10"
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    external_store_id: "ed178ef3-b486-4ce8-8baa-5bc9f0f3fa4a"
                    phone_number: "+12065551212"
                    address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
                    status: "active"
                    is_test: false
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Store not found under this external business ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - Business & Store
      summary: Update Store
      description: Update the attributes of a store.
      operationId: updateStore
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
        - name: external_store_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID for the store. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStoreRequest'
            examples:
              basic:
                value:
                  name: "Neighborhood Deli #10"
                  phone_number: "+12065551212"
                  address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli #10"
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    external_store_id: "ed178ef3-b486-4ce8-8baa-5bc9f0f3fa4a"
                    phone_number: "+12065551212"
                    address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
                    status: "active"
                    is_test: false
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Store not found under this external business ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /v1/businesses/{external_business_id}/stores:
    post:
      tags:
        - Business & Store
      summary: Create Store
      description: Create a Drive store.
      operationId: createStore
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStoreRequest'
            examples:
              basic:
                value:
                  external_store_id: "ed178ef3-b486-4ce8-8baa-5bc9f0f3fa4a"
                  name: "Neighborhood Deli #10"
                  phone_number: "+12065551212"
                  address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Store'
              examples:
                success:
                  value:
                    name: "Neighborhood Deli #10"
                    external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                    external_store_id: "ed178ef3-b486-4ce8-8baa-5bc9f0f3fa4a"
                    phone_number: "+12065551212"
                    address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
                    status: "active"
                    is_test: false
                    created_at: "2022-04-25T17:21:43Z"
                    last_updated_at: "2022-04-25T17:21:43Z"
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unknown external business ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '424':
          description: Missing dependency to set up stores
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - Business & Store
      summary: List Stores
      description: List the stores under a business.
      operationId: listStores
      parameters:
        - name: external_business_id
          in: path
          required: true
          schema:
            type: string
          description: "Unique, caller-selected ID of the business. Validated using the following regular expression: /^[A-Za-z0-9_-]{3,64}$/."
        - name: activationStatus
          in: query
          required: false
          schema:
            type: string
            enum: [active, inactive]
          description: "Activation status of the store."
        - name: continuationToken
          in: query
          required: false
          schema:
            type: string
          description: "Opaque string that can be used to fetch next page of stores, the token value will be null if there are no more stores to fetch. Page size is 100 stores."
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListStoresResponse'
              examples:
                success:
                  value:
                    result:
                      - name: "Neighborhood Deli #10"
                        external_business_id: "a0720d55-7cbe-41ce-8185-58285b7985cd"
                        external_store_id: "ed178ef3-b486-4ce8-8baa-5bc9f0f3fa4a"
                        phone_number: "+12065551212"
                        address: "901 Market Street, 6th Floor, San Francisco, CA, 94103"
                        status: "active"
                        is_test: false
                        created_at: "2022-04-25T17:21:43Z"
                        last_updated_at: "2022-04-25T17:21:43Z"
                    continuation_token: "string"
                    result_count: 1
        '400':
          description: Request validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Operation not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unknown external business ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal service failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
tags:
  - name: Delivery
    description: Endpoints for managing deliveries and quotes
  - name: Audit
    description: Endpoints for audit signals
  - name: Business & Store
    description: Endpoints for managing businesses and stores
